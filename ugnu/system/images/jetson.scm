;;; SPDX-FileCopyrightText: 2022 Brian Kubisiak <brian@kubisiak.com>
;;;
;;; SPDX-License-Identifier: GPL-3.0-or-later

(define-module (ugnu system images jetson)
  #:use-module (ugnu packages linux)
  #:use-module (gnu bootloader)
  #:use-module (gnu image)
  #:use-module (gnu packages admin)
  #:use-module (gnu packages bootloaders)
  #:use-module (gnu platforms arm)
  #:use-module (gnu services)
  #:use-module (gnu services shepherd)
  #:use-module (gnu system)
  #:use-module (gnu system file-systems)
  #:use-module (gnu system image)
  #:use-module (guix gexp)
  #:use-module (nongnu packages linux))

;;; Commentary:
;;;
;;; Base OS definition and system image for NVIDIA's xavier-nx SoC.
;;;
;;; Code:

(define* (jetson-bootloader-configuration-file config entries
                                               #:key
                                               #:allow-other-keys)
  "Return the jetson's extlinux configuration file corresponding to CONFIG, a
<bootloader-configuration-file> object, containing ENTRIES, a list of
<menu-entry> objects."

  (define all-entries
    (append entries (bootloader-configuration-menu-entries config)))

  (define (menu-entry->gexp entry)
    (let ((label (menu-entry-label entry))
          (kernel (menu-entry-linux entry))
          (kernel-arguments (menu-entry-linux-arguments entry))
          (initrd (menu-entry-initrd entry)))
      #~(format port "LABEL ~a
    MENU LABEL ~a
    LINUX ~a
    INITRD ~a
    APPEND ${cbootargs} ~a
~%"
                #$label #$label
                #$kernel #$initrd
                (string-join (list #$@kernel-arguments)))))

  (define builder
    #~(call-with-output-file #$output
        (lambda (port)
          (let ((timeout #$(bootloader-configuration-timeout config)))
            (format port "# auto-generated by uguix
PROMPT ~a
TIMEOUT ~a
MENU TITLE uGuix4Tegra Boot Options
~%"
                    (if (> timeout 0) 1 0)
                    (* 10 timeout))
            #$@(map menu-entry->gexp all-entries)))))

  (computed-file "extlinux.conf" builder
                 #:options '(#:local-build? #t
                             #:substitutable? #f)))

(define jetson-bootloader
  (bootloader
   (name 'jetson-bootloader)
   (package #f)
   (installer #f)
   (configuration-file "/boot/extlinux/extlinux.conf")
   (configuration-file-generator jetson-bootloader-configuration-file)))

(define-public jetson-barebones-os
  (operating-system
    (host-name "jetson-xavier-nx")
    (timezone "US/Pacific")
    (locale "en_US.utf8")
    (bootloader (bootloader-configuration
                 (bootloader jetson-bootloader)
                 (targets '("/dev/mmcblk0p1"))))
    (initrd-modules '())
    (kernel tegra-linux)
    (file-systems (cons (file-system
                          (device (file-system-label "jetson-root"))
                          (mount-point "/")
                          (type "ext4"))
                        %base-file-systems))
    (packages (append (list tegra-firmware linux-firmware)
                      %base-packages))))

jetson-barebones-os

;;; jetson.scm ends here
